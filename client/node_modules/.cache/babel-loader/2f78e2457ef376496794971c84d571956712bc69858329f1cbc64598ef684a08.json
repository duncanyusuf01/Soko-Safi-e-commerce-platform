{"ast":null,"code":"var _jsxFileName = \"/home/yusuf12148/moringa/Soko-Safi-e-commerce-platform/client/src/context/UserProvider.js\",\n  _s = $RefreshSig$();\n// client/src/context/UserProvider.js\n\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // ✅ Function to check session from backend\n  const checkSession = useCallback(async () => {\n    try {\n      const response = await fetch('/check_session', {\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n      } else {\n        setUser(null);\n      }\n    } catch (error) {\n      console.error(\"Error checking session:\", error);\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // ✅ Function to manually log in a user (e.g. after successful login form)\n  const login = userData => {\n    setUser(userData);\n  };\n\n  // ✅ Logout\n  const logout = async () => {\n    await fetch('/logout', {\n      method: 'DELETE',\n      credentials: 'include'\n    });\n    setUser(null);\n  };\n\n  // ✅ Check session on component mount\n  useEffect(() => {\n    checkSession();\n  }, [checkSession]);\n\n  // ✅ Context value\n  const value = {\n    user,\n    login,\n    logout,\n    loading,\n    refetchUser: checkSession\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"NIahvG9kMzXGurJEcDkUN0xPmls=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","loading","setLoading","checkSession","response","fetch","credentials","ok","userData","json","error","console","login","logout","method","value","refetchUser","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/yusuf12148/moringa/Soko-Safi-e-commerce-platform/client/src/context/UserProvider.js"],"sourcesContent":["// client/src/context/UserProvider.js\n\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\n\nexport const UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // ✅ Function to check session from backend\n  const checkSession = useCallback(async () => {\n    try {\n      const response = await fetch('/check_session', {\n        credentials: 'include',\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n      } else {\n        setUser(null);\n      }\n    } catch (error) {\n      console.error(\"Error checking session:\", error);\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // ✅ Function to manually log in a user (e.g. after successful login form)\n  const login = (userData) => {\n    setUser(userData);\n  };\n\n  // ✅ Logout\n  const logout = async () => {\n    await fetch('/logout', { method: 'DELETE', credentials: 'include' });\n    setUser(null);\n  };\n\n  // ✅ Check session on component mount\n  useEffect(() => {\n    checkSession();\n  }, [checkSession]);\n\n  // ✅ Context value\n  const value = { user, login, logout, loading, refetchUser: checkSession };\n\n  return (\n    <UserContext.Provider value={value}>\n      {!loading && children}\n    </UserContext.Provider>\n  );\n};\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMa,YAAY,GAAGX,WAAW,CAAC,YAAY;IAC3C,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,EAAE;QAC7CC,WAAW,EAAE;MACf,CAAC,CAAC;MACF,IAAIF,QAAQ,CAACG,EAAE,EAAE;QACf,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACtCT,OAAO,CAACQ,QAAQ,CAAC;MACnB,CAAC,MAAM;QACLR,OAAO,CAAC,IAAI,CAAC;MACf;IACF,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CV,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,KAAK,GAAIJ,QAAQ,IAAK;IAC1BR,OAAO,CAACQ,QAAQ,CAAC;EACnB,CAAC;;EAED;EACA,MAAMK,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMR,KAAK,CAAC,SAAS,EAAE;MAAES,MAAM,EAAE,QAAQ;MAAER,WAAW,EAAE;IAAU,CAAC,CAAC;IACpEN,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;;EAED;EACAT,SAAS,CAAC,MAAM;IACdY,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMY,KAAK,GAAG;IAAEhB,IAAI;IAAEa,KAAK;IAAEC,MAAM;IAAEZ,OAAO;IAAEe,WAAW,EAAEb;EAAa,CAAC;EAEzE,oBACET,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAlB,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAACvB,EAAA,CAhDWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}